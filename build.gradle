import net.ltgt.gradle.errorprone.CheckSeverity

buildscript {
    repositories {
        gradlePluginPortal()
        mavenCentral()
        maven { url 'https://palantir.bintray.com/releases' }
        jcenter()
    }
    dependencies {
        classpath 'com.netflix.nebula:gradle-info-plugin:6.0.0'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.5'
        classpath 'com.netflix.nebula:nebula-publishing-plugin:16.0.0'
        classpath 'com.palantir.baseline:gradle-baseline-java:3.80.0'
        classpath 'com.palantir.gradle.consistentversions:gradle-consistent-versions:1.16.0'
        classpath 'com.palantir.gradle.gitversion:gradle-git-version:0.12.2'
        classpath 'org.unbroken-dome.gradle-plugins:gradle-testsets-plugin:2.2.1'
        classpath 'com.palantir.gradle.conjure:gradle-conjure:4.15.0'
        classpath 'com.palantir.javaformat:gradle-palantir-java-format:1.1.0'
    }
}

plugins {
    id 'com.palantir.git-version' version '0.12.2'
}

apply plugin: 'com.palantir.baseline'
apply plugin: 'com.palantir.git-version'
apply plugin: 'com.palantir.consistent-versions'

version gitVersion()

allprojects {
    version rootProject.version
    group 'com.palantir.docker.compose'

    repositories {
        mavenCentral()
        maven { url 'https://palantir.bintray.com/releases' }
        jcenter()
    }
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'com.palantir.java-format'
    apply from: "${rootDir}/gradle/publish-jar.gradle"

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    dependencies {
        annotationProcessor 'org.immutables:value'
        compileOnly 'org.immutables:value::annotations'
    }

    tasks.withType(JavaCompile).configureEach {
        options.errorprone {

            check("CatchBlockLogException", CheckSeverity.OFF)
            check("PreconditionsConstantMessage", CheckSeverity.OFF)
            check("PreferSafeLoggableExceptions", CheckSeverity.OFF)
            check("PreferSafeLoggingPreconditions", CheckSeverity.OFF)
            check("Slf4jConstantLogMessage", CheckSeverity.OFF)
            check("ValidateConstantMessage", CheckSeverity.OFF)
            check("PreconditionsConstantMessage", CheckSeverity.OFF)
            check('Slf4jLogsafeArgs', CheckSeverity.OFF)

        }
    }
}
